<Dog: void <init>()>/@this	<Dog: void <init>()>
<Dog: void <init>()>/this#_0	<Dog: void <init>()>
<Dog: void play()>/@this	<Dog: void play()>
<Dog: void play()>/this#_0	<Dog: void play()>
<Cat: void <init>()>/@this	<Cat: void <init>()>
<Cat: void <init>()>/this#_0	<Cat: void <init>()>
<Cat: void setParent(Cat)>/@this	<Cat: void setParent(Cat)>
<Cat: void setParent(Cat)>/@parameter0	<Cat: void setParent(Cat)>
<Cat: void setParent(Cat)>/this#_0	<Cat: void setParent(Cat)>
<Cat: void setParent(Cat)>/c#_0	<Cat: void setParent(Cat)>
<Cat: Cat getParent()>/@this	<Cat: Cat getParent()>
<Cat: Cat getParent()>/this#_0	<Cat: Cat getParent()>
<Cat: Cat getParent()>/$stack1	<Cat: Cat getParent()>
<Cat: void play()>/@this	<Cat: void play()>
<Cat: void play()>/this#_0	<Cat: void play()>
<Animal: void <init>()>/@this	<Animal: void <init>()>
<Animal: void <init>()>/this#_0	<Animal: void <init>()>
<Animal: void play()>/@this	<Animal: void play()>
<Animal: void play()>/this#_0	<Animal: void play()>
<Animal: Animal playWith(Animal)>/@this	<Animal: Animal playWith(Animal)>
<Animal: Animal playWith(Animal)>/@parameter0	<Animal: Animal playWith(Animal)>
<Animal: Animal playWith(Animal)>/other#_0	<Animal: Animal playWith(Animal)>
<Animal: Animal playWith(Animal)>/this#_0	<Animal: Animal playWith(Animal)>
<Simple_Pointer: void <init>()>/@this	<Simple_Pointer: void <init>()>
<Simple_Pointer: void <init>()>/this#_0	<Simple_Pointer: void <init>()>
<Simple_Pointer: void main(java.lang.String[])>/@parameter0	<Simple_Pointer: void main(java.lang.String[])>
<Simple_Pointer: void main(java.lang.String[])>/$stack4	<Simple_Pointer: void main(java.lang.String[])>
<Simple_Pointer: void main(java.lang.String[])>/args#_0	<Simple_Pointer: void main(java.lang.String[])>
<Simple_Pointer: void main(java.lang.String[])>/$stack5	<Simple_Pointer: void main(java.lang.String[])>
<Simple_Pointer: void main(java.lang.String[])>/$stack6	<Simple_Pointer: void main(java.lang.String[])>
<Simple_Pointer: void main(java.lang.String[])>/$stack7	<Simple_Pointer: void main(java.lang.String[])>
<Simple_Pointer: void main(java.lang.String[])>/$stack8	<Simple_Pointer: void main(java.lang.String[])>
<Simple_Pointer: void main(java.lang.String[])>/line#_12	<Simple_Pointer: void main(java.lang.String[])>
<Simple_Pointer: void main(java.lang.String[])>/$stack9	<Simple_Pointer: void main(java.lang.String[])>
<Simple_Pointer: void main(java.lang.String[])>/$stack10	<Simple_Pointer: void main(java.lang.String[])>
<Simple_Pointer: void main(java.lang.String[])>/$stack11	<Simple_Pointer: void main(java.lang.String[])>
<Simple_Pointer: void main(java.lang.String[])>/$stack12	<Simple_Pointer: void main(java.lang.String[])>
<Simple_Pointer: void main(java.lang.String[])>/result#_14	<Simple_Pointer: void main(java.lang.String[])>
<Simple_Pointer: void main(java.lang.String[])>/$stack13	<Simple_Pointer: void main(java.lang.String[])>
<Simple_Pointer: void sanitize(java.lang.Object)>/@parameter0	<Simple_Pointer: void sanitize(java.lang.Object)>
<Simple_Pointer: void sanitize(java.lang.Object)>/o#_0	<Simple_Pointer: void sanitize(java.lang.Object)>
<Simple_Pointer: void test(int)>/@this	<Simple_Pointer: void test(int)>
<Simple_Pointer: void test(int)>/@parameter0	<Simple_Pointer: void test(int)>
<Simple_Pointer: void test(int)>/l#_0	<Simple_Pointer: void test(int)>
<Simple_Pointer: void test(int)>/$stack4	<Simple_Pointer: void test(int)>
new_var_19	<Simple_Pointer: void test(int)>
<Simple_Pointer: void test(int)>/$stack5	<Simple_Pointer: void test(int)>
<Simple_Pointer: void test(int)>/this#_0	<Simple_Pointer: void test(int)>
<Simple_Pointer: void test(int)>/$stack6	<Simple_Pointer: void test(int)>
<Simple_Pointer: void test(int)>/a#_26	<Simple_Pointer: void test(int)>
<Simple_Pointer: void test(int)>/a_$$A_1#_28	<Simple_Pointer: void test(int)>
<Simple_Pointer: void test(int)>/a_$$A_2#_29	<Simple_Pointer: void test(int)>
<Simple_Pointer: void morePlay(Cat)>/@this	<Simple_Pointer: void morePlay(Cat)>
<Simple_Pointer: void morePlay(Cat)>/@parameter0	<Simple_Pointer: void morePlay(Cat)>
<Simple_Pointer: void morePlay(Cat)>/c#_0	<Simple_Pointer: void morePlay(Cat)>
<Simple_Pointer: void morePlay(Cat)>/p#_38	<Simple_Pointer: void morePlay(Cat)>
<Simple_Pointer: void morePlay(Cat)>/a1#_41	<Simple_Pointer: void morePlay(Cat)>
<Simple_Pointer: void morePlay(Cat)>/a2#_42	<Simple_Pointer: void morePlay(Cat)>
<Simple_Pointer: void morePlay(Cat)>/this#_0	<Simple_Pointer: void morePlay(Cat)>
