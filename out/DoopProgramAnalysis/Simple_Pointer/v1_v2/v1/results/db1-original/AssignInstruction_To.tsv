<Simple_Pointer: void main(java.lang.String[])>/assign/1	<Simple_Pointer: void main(java.lang.String[])>/$stack4
<Simple_Pointer: void main(java.lang.String[])>/assign/3	<Simple_Pointer: void main(java.lang.String[])>/$stack6
<Simple_Pointer: void main(java.lang.String[])>/assign/4	<Simple_Pointer: void main(java.lang.String[])>/$stack7
<Simple_Pointer: void main(java.lang.String[])>/assign/6	<Simple_Pointer: void main(java.lang.String[])>/$stack9
<Simple_Pointer: void test(int)>/assign/2	<Simple_Pointer: void test(int)>/$stack8
<Simple_Pointer: void test(int)>/assign/4	<Simple_Pointer: void test(int)>/$stack5
<Simple_Pointer: void test(int)>/assign/7	<Simple_Pointer: void test(int)>/$stack6
<Simple_Pointer: void test(int)>/assign/8	<Simple_Pointer: void test(int)>/$stack7
<Dog: void <init>()>/assign/0	<Dog: void <init>()>/this#_0
<Dog: void play()>/assign/0	<Dog: void play()>/this#_0
<Cat: void <init>()>/assign/0	<Cat: void <init>()>/this#_0
<Cat: void setParent(Cat)>/assign/0	<Cat: void setParent(Cat)>/this#_0
<Cat: void setParent(Cat)>/assign/1	<Cat: void setParent(Cat)>/c#_0
<Cat: Cat getParent()>/assign/0	<Cat: Cat getParent()>/this#_0
<Cat: void play()>/assign/0	<Cat: void play()>/this#_0
<Animal: void <init>()>/assign/0	<Animal: void <init>()>/this#_0
<Animal: void play()>/assign/0	<Animal: void play()>/this#_0
<Animal: Animal playWith(Animal)>/assign/0	<Animal: Animal playWith(Animal)>/this#_0
<Animal: Animal playWith(Animal)>/assign/1	<Animal: Animal playWith(Animal)>/other#_0
<Simple_Pointer: void <init>()>/assign/0	<Simple_Pointer: void <init>()>/this#_0
<Simple_Pointer: void main(java.lang.String[])>/assign/0	<Simple_Pointer: void main(java.lang.String[])>/args#_0
<Simple_Pointer: void sanitize(java.lang.Object)>/assign/0	<Simple_Pointer: void sanitize(java.lang.Object)>/o#_0
<Simple_Pointer: void test(int)>/assign/0	<Simple_Pointer: void test(int)>/this#_0
<Simple_Pointer: void test(int)>/assign/1	<Simple_Pointer: void test(int)>/l#_0
<Simple_Pointer: void test(int)>/assign/3	<Simple_Pointer: void test(int)>/a#_26
<Simple_Pointer: void test(int)>/assign/5	<Simple_Pointer: void test(int)>/a_$$A_1#_28
<Simple_Pointer: void test(int)>/phi-assign/0	<Simple_Pointer: void test(int)>/a_$$A_2#_29
<Simple_Pointer: void test(int)>/phi-assign/1	<Simple_Pointer: void test(int)>/a_$$A_2#_29
<Simple_Pointer: void morePlay(Cat)>/assign/0	<Simple_Pointer: void morePlay(Cat)>/this#_0
<Simple_Pointer: void morePlay(Cat)>/assign/1	<Simple_Pointer: void morePlay(Cat)>/c#_0
