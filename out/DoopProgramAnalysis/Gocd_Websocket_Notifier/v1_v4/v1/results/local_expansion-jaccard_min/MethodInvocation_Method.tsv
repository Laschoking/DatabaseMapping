<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void onOpen(org.java_websocket.WebSocket,org.java_websocket.handshake.ClientHandshake)>/java.lang.StringBuilder.append/3	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void onOpen(org.java_websocket.WebSocket,org.java_websocket.handshake.ClientHandshake)>/java.lang.StringBuilder.toString/1	<java.lang.StringBuilder: java.lang.String toString()>
<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: com.thoughtworks.go.plugin.api.response.GoPluginApiResponse handleStageNotification(com.thoughtworks.go.plugin.api.request.GoPluginApiRequest)>/java.lang.Exception.getMessage/0	<java.lang.Throwable: java.lang.String getMessage()>
<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: com.thoughtworks.go.plugin.api.response.GoPluginApiResponse handleStageNotification(com.thoughtworks.go.plugin.api.request.GoPluginApiRequest)>/java.util.Map.put/2	<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: void initializeGoApplicationAccessor(com.thoughtworks.go.plugin.api.GoApplicationAccessor)>/com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer.getPort/0	<org.java_websocket.server.WebSocketServer: int getPort()>
<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: void initializeGoApplicationAccessor(com.thoughtworks.go.plugin.api.GoApplicationAccessor)>/com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer.start/0	<org.java_websocket.server.WebSocketServer: void start()>
<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void onOpen(org.java_websocket.WebSocket,org.java_websocket.handshake.ClientHandshake)>/java.net.InetAddress.getHostAddress/0	<java.net.InetAddress: java.lang.String getHostAddress()>
<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: void initializeGoApplicationAccessor(com.thoughtworks.go.plugin.api.GoApplicationAccessor)>/com.thoughtworks.go.plugin.api.logging.Logger.info/4	<com.thoughtworks.go.plugin.api.logging.Logger: void info(java.lang.String)>
<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: void initializeGoApplicationAccessor(com.thoughtworks.go.plugin.api.GoApplicationAccessor)>/com.thoughtworks.go.plugin.api.logging.Logger.info/1	<com.thoughtworks.go.plugin.api.logging.Logger: void info(java.lang.String)>
<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: void initializeGoApplicationAccessor(com.thoughtworks.go.plugin.api.GoApplicationAccessor)>/java.lang.StringBuilder.append/4	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: void initializeGoApplicationAccessor(com.thoughtworks.go.plugin.api.GoApplicationAccessor)>/java.lang.StringBuilder.append/1	<java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: void initializeGoApplicationAccessor(com.thoughtworks.go.plugin.api.GoApplicationAccessor)>/java.lang.StringBuilder.append/0	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: void initializeGoApplicationAccessor(com.thoughtworks.go.plugin.api.GoApplicationAccessor)>/java.lang.StringBuilder.append/5	<java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: void initializeGoApplicationAccessor(com.thoughtworks.go.plugin.api.GoApplicationAccessor)>/java.lang.StringBuilder.append/2	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: void initializeGoApplicationAccessor(com.thoughtworks.go.plugin.api.GoApplicationAccessor)>/java.lang.StringBuilder.toString/2	<java.lang.StringBuilder: java.lang.String toString()>
<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: void initializeGoApplicationAccessor(com.thoughtworks.go.plugin.api.GoApplicationAccessor)>/java.lang.StringBuilder.toString/0	<java.lang.StringBuilder: java.lang.String toString()>
<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: void initializeGoApplicationAccessor(com.thoughtworks.go.plugin.api.GoApplicationAccessor)>/java.lang.StringBuilder.toString/1	<java.lang.StringBuilder: java.lang.String toString()>
<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void onOpen(org.java_websocket.WebSocket,org.java_websocket.handshake.ClientHandshake)>/java.lang.StringBuilder.append/1	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void onClose(org.java_websocket.WebSocket,int,java.lang.String,boolean)>/com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer.sendToAll/0	<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void sendToAll(java.lang.String)>
<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void onOpen(org.java_websocket.WebSocket,org.java_websocket.handshake.ClientHandshake)>/java.lang.StringBuilder.append/2	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void onOpen(org.java_websocket.WebSocket,org.java_websocket.handshake.ClientHandshake)>/java.lang.StringBuilder.append/0	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void onOpen(org.java_websocket.WebSocket,org.java_websocket.handshake.ClientHandshake)>/org.java_websocket.WebSocket.getRemoteSocketAddress/0	<org.java_websocket.WebSocket: java.net.InetSocketAddress getRemoteSocketAddress()>
<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void onOpen(org.java_websocket.WebSocket,org.java_websocket.handshake.ClientHandshake)>/java.lang.StringBuilder.toString/0	<java.lang.StringBuilder: java.lang.String toString()>
<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void onClose(org.java_websocket.WebSocket,int,java.lang.String,boolean)>/java.lang.StringBuilder.toString/0	<java.lang.StringBuilder: java.lang.String toString()>
<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void onMessage(org.java_websocket.WebSocket,java.lang.String)>/java.lang.StringBuilder.append/0	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void onClose(org.java_websocket.WebSocket,int,java.lang.String,boolean)>/java.lang.StringBuilder.append/0	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void onError(org.java_websocket.WebSocket,java.lang.Exception)>/java.lang.Exception.printStackTrace/0	<java.lang.Throwable: void printStackTrace()>
<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void onClose(org.java_websocket.WebSocket,int,java.lang.String,boolean)>/com.thoughtworks.go.plugin.api.logging.Logger.info/0	<com.thoughtworks.go.plugin.api.logging.Logger: void info(java.lang.String)>
<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void onClose(org.java_websocket.WebSocket,int,java.lang.String,boolean)>/java.lang.StringBuilder.append/1	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void onClose(org.java_websocket.WebSocket,int,java.lang.String,boolean)>/java.lang.StringBuilder.append/3	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void onClose(org.java_websocket.WebSocket,int,java.lang.String,boolean)>/java.lang.StringBuilder.toString/1	<java.lang.StringBuilder: java.lang.String toString()>
<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void onMessage(org.java_websocket.WebSocket,java.lang.String)>/com.thoughtworks.go.plugin.api.logging.Logger.info/0	<com.thoughtworks.go.plugin.api.logging.Logger: void info(java.lang.String)>
<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void onMessage(org.java_websocket.WebSocket,java.lang.String)>/java.lang.StringBuilder.append/1	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void onMessage(org.java_websocket.WebSocket,java.lang.String)>/java.lang.StringBuilder.toString/0	<java.lang.StringBuilder: java.lang.String toString()>
<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void onOpen(org.java_websocket.WebSocket,org.java_websocket.handshake.ClientHandshake)>/org.java_websocket.handshake.ClientHandshake.getResourceDescriptor/0	<org.java_websocket.handshake.ClientHandshake: java.lang.String getResourceDescriptor()>
<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void sendToAll(java.lang.String)>/org.java_websocket.WebSocket.send/0	<org.java_websocket.WebSocket: void send(java.lang.String)>
<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void onMessage(org.java_websocket.WebSocket,java.lang.String)>/com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer.sendToAll/0	<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void sendToAll(java.lang.String)>
<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void onOpen(org.java_websocket.WebSocket,org.java_websocket.handshake.ClientHandshake)>/com.thoughtworks.go.plugin.api.logging.Logger.info/0	<com.thoughtworks.go.plugin.api.logging.Logger: void info(java.lang.String)>
<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: void initializeGoApplicationAccessor(com.thoughtworks.go.plugin.api.GoApplicationAccessor)>/com.thoughtworks.go.plugin.api.logging.Logger.info/0	<com.thoughtworks.go.plugin.api.logging.Logger: void info(java.lang.String)>
<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: void initializeGoApplicationAccessor(com.thoughtworks.go.plugin.api.GoApplicationAccessor)>/com.thoughtworks.go.plugin.api.logging.Logger.info/3	<com.thoughtworks.go.plugin.api.logging.Logger: void info(java.lang.String)>
<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void onOpen(org.java_websocket.WebSocket,org.java_websocket.handshake.ClientHandshake)>/com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer.sendToAll/0	<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void sendToAll(java.lang.String)>
<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: void initializeGoApplicationAccessor(com.thoughtworks.go.plugin.api.GoApplicationAccessor)>/com.thoughtworks.go.plugin.api.logging.Logger.info/2	<com.thoughtworks.go.plugin.api.logging.Logger: void info(java.lang.String)>
<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void onClose(org.java_websocket.WebSocket,int,java.lang.String,boolean)>/java.lang.StringBuilder.append/2	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void onOpen(org.java_websocket.WebSocket,org.java_websocket.handshake.ClientHandshake)>/java.net.InetSocketAddress.getAddress/0	<java.net.InetSocketAddress: java.net.InetAddress getAddress()>
<com.matt_richardson.gocd.websocket_notifier.WebSocketPipelineListener: void notify(com.thoughtworks.go.plugin.api.request.GoPluginApiRequest)>/com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer.sendToAll/0	<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void sendToAll(java.lang.String)>
<com.matt_richardson.gocd.websocket_notifier.WebSocketPipelineListener: void notify(com.thoughtworks.go.plugin.api.request.GoPluginApiRequest)>/com.thoughtworks.go.plugin.api.logging.Logger.info/0	<com.thoughtworks.go.plugin.api.logging.Logger: void info(java.lang.String)>
<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: com.thoughtworks.go.plugin.api.response.GoPluginApiResponse handle(com.thoughtworks.go.plugin.api.request.GoPluginApiRequest)>/com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin.handleStageNotification/0	<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: com.thoughtworks.go.plugin.api.response.GoPluginApiResponse handleStageNotification(com.thoughtworks.go.plugin.api.request.GoPluginApiRequest)>
<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: com.thoughtworks.go.plugin.api.response.GoPluginApiResponse handleStageNotification(com.thoughtworks.go.plugin.api.request.GoPluginApiRequest)>/com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin.renderJSON/0	<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: com.thoughtworks.go.plugin.api.response.GoPluginApiResponse renderJSON(int,java.lang.Object)>
<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: void initializeGoApplicationAccessor(com.thoughtworks.go.plugin.api.GoApplicationAccessor)>/com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer.<init>/0	<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void <init>(int)>
<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: void initializeGoApplicationAccessor(com.thoughtworks.go.plugin.api.GoApplicationAccessor)>/com.matt_richardson.gocd.websocket_notifier.WebSocketPipelineListener.<init>/0	<com.matt_richardson.gocd.websocket_notifier.WebSocketPipelineListener: void <init>(com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer)>
<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: void initializeGoApplicationAccessor(com.thoughtworks.go.plugin.api.GoApplicationAccessor)>/java.lang.StringBuilder.<init>/2	<java.lang.StringBuilder: void <init>()>
<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: void initializeGoApplicationAccessor(com.thoughtworks.go.plugin.api.GoApplicationAccessor)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>()>
<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void onClose(org.java_websocket.WebSocket,int,java.lang.String,boolean)>/java.lang.StringBuilder.<init>/1	<java.lang.StringBuilder: void <init>()>
<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void onOpen(org.java_websocket.WebSocket,org.java_websocket.handshake.ClientHandshake)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>()>
<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void onClose(org.java_websocket.WebSocket,int,java.lang.String,boolean)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>()>
<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void onMessage(org.java_websocket.WebSocket,java.lang.String)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>()>
<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void onOpen(org.java_websocket.WebSocket,org.java_websocket.handshake.ClientHandshake)>/java.lang.StringBuilder.<init>/1	<java.lang.StringBuilder: void <init>()>
<com.matt_richardson.gocd.websocket_notifier.WebSocketPipelineListener: void <init>(com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer)>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<com.matt_richardson.gocd.websocket_notifier.WebSocketPipelineListener: void <init>(com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer)>/com.thoughtworks.go.plugin.api.logging.Logger.getLoggerFor/0	<com.thoughtworks.go.plugin.api.logging.Logger: com.thoughtworks.go.plugin.api.logging.Logger getLoggerFor(java.lang.Class)>
<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: com.thoughtworks.go.plugin.api.GoPluginIdentifier pluginIdentifier()>/com.thoughtworks.go.plugin.api.logging.Logger.info/0	<com.thoughtworks.go.plugin.api.logging.Logger: void info(java.lang.String)>
<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: com.thoughtworks.go.plugin.api.response.GoPluginApiResponse handle(com.thoughtworks.go.plugin.api.request.GoPluginApiRequest)>/com.thoughtworks.go.plugin.api.logging.Logger.info/0	<com.thoughtworks.go.plugin.api.logging.Logger: void info(java.lang.String)>
<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: com.thoughtworks.go.plugin.api.response.GoPluginApiResponse handle(com.thoughtworks.go.plugin.api.request.GoPluginApiRequest)>/com.thoughtworks.go.plugin.api.request.GoPluginApiRequest.requestName/0	<com.thoughtworks.go.plugin.api.request.GoPluginApiRequest: java.lang.String requestName()>
<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: com.thoughtworks.go.plugin.api.response.GoPluginApiResponse handle(com.thoughtworks.go.plugin.api.request.GoPluginApiRequest)>/com.thoughtworks.go.plugin.api.request.GoPluginApiRequest.requestName/1	<com.thoughtworks.go.plugin.api.request.GoPluginApiRequest: java.lang.String requestName()>
<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: com.thoughtworks.go.plugin.api.response.GoPluginApiResponse handle(com.thoughtworks.go.plugin.api.request.GoPluginApiRequest)>/com.thoughtworks.go.plugin.api.request.GoPluginApiRequest.requestName/2	<com.thoughtworks.go.plugin.api.request.GoPluginApiRequest: java.lang.String requestName()>
<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: com.thoughtworks.go.plugin.api.response.GoPluginApiResponse handle(com.thoughtworks.go.plugin.api.request.GoPluginApiRequest)>/java.lang.String.equals/0	<java.lang.String: boolean equals(java.lang.Object)>
<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: com.thoughtworks.go.plugin.api.response.GoPluginApiResponse handle(com.thoughtworks.go.plugin.api.request.GoPluginApiRequest)>/java.lang.String.equals/1	<java.lang.String: boolean equals(java.lang.Object)>
<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: com.thoughtworks.go.plugin.api.response.GoPluginApiResponse handle(com.thoughtworks.go.plugin.api.request.GoPluginApiRequest)>/java.lang.StringBuilder.append/0	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: com.thoughtworks.go.plugin.api.response.GoPluginApiResponse handle(com.thoughtworks.go.plugin.api.request.GoPluginApiRequest)>/java.lang.StringBuilder.append/1	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: com.thoughtworks.go.plugin.api.response.GoPluginApiResponse handle(com.thoughtworks.go.plugin.api.request.GoPluginApiRequest)>/java.lang.StringBuilder.toString/0	<java.lang.StringBuilder: java.lang.String toString()>
<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: com.thoughtworks.go.plugin.api.response.GoPluginApiResponse handleNotificationsInterestedIn()>/com.thoughtworks.go.plugin.api.logging.Logger.info/0	<com.thoughtworks.go.plugin.api.logging.Logger: void info(java.lang.String)>
<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: com.thoughtworks.go.plugin.api.response.GoPluginApiResponse handleNotificationsInterestedIn()>/java.util.Map.put/0	<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: com.thoughtworks.go.plugin.api.response.GoPluginApiResponse handleStageNotification(com.thoughtworks.go.plugin.api.request.GoPluginApiRequest)>/com.matt_richardson.gocd.websocket_notifier.WebSocketPipelineListener.notify/0	<com.matt_richardson.gocd.websocket_notifier.WebSocketPipelineListener: void notify(com.thoughtworks.go.plugin.api.request.GoPluginApiRequest)>
<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: com.thoughtworks.go.plugin.api.response.GoPluginApiResponse handleStageNotification(com.thoughtworks.go.plugin.api.request.GoPluginApiRequest)>/com.thoughtworks.go.plugin.api.logging.Logger.info/0	<com.thoughtworks.go.plugin.api.logging.Logger: void info(java.lang.String)>
<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: com.thoughtworks.go.plugin.api.response.GoPluginApiResponse handleStageNotification(com.thoughtworks.go.plugin.api.request.GoPluginApiRequest)>/com.thoughtworks.go.plugin.api.logging.Logger.error/0	<com.thoughtworks.go.plugin.api.logging.Logger: void error(java.lang.String,java.lang.Throwable)>
<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: com.thoughtworks.go.plugin.api.response.GoPluginApiResponse handleStageNotification(com.thoughtworks.go.plugin.api.request.GoPluginApiRequest)>/java.util.List.add/0	<java.util.List: boolean add(java.lang.Object)>
<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: com.thoughtworks.go.plugin.api.response.GoPluginApiResponse handleStageNotification(com.thoughtworks.go.plugin.api.request.GoPluginApiRequest)>/java.util.Map.put/0	<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: com.thoughtworks.go.plugin.api.response.GoPluginApiResponse handleStageNotification(com.thoughtworks.go.plugin.api.request.GoPluginApiRequest)>/java.util.Map.put/1	<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: com.thoughtworks.go.plugin.api.response.GoPluginApiResponse renderJSON(int,java.lang.Object)>/com.google.gson.Gson.toJson/0	<com.google.gson.Gson: java.lang.String toJson(java.lang.Object)>
<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: com.thoughtworks.go.plugin.api.response.GoPluginApiResponse renderJSON(int,java.lang.Object)>/com.google.gson.GsonBuilder.create/0	<com.google.gson.GsonBuilder: com.google.gson.Gson create()>
<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: void initializeGoApplicationAccessor(com.thoughtworks.go.plugin.api.GoApplicationAccessor)>/com.thoughtworks.go.plugin.api.logging.Logger.error/0	<com.thoughtworks.go.plugin.api.logging.Logger: void error(java.lang.String,java.lang.Throwable)>
<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: void initializeGoApplicationAccessor(com.thoughtworks.go.plugin.api.GoApplicationAccessor)>/java.lang.StringBuilder.append/3	<java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void onMessage(org.java_websocket.WebSocket,java.lang.String)>/java.lang.StringBuilder.append/2	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void sendToAll(java.lang.String)>/com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer.connections/0	<org.java_websocket.server.WebSocketServer: java.util.Collection connections()>
<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void sendToAll(java.lang.String)>/com.thoughtworks.go.plugin.api.logging.Logger.info/0	<com.thoughtworks.go.plugin.api.logging.Logger: void info(java.lang.String)>
<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void sendToAll(java.lang.String)>/java.lang.StringBuilder.append/0	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void sendToAll(java.lang.String)>/java.lang.StringBuilder.append/1	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void sendToAll(java.lang.String)>/java.lang.StringBuilder.append/2	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void sendToAll(java.lang.String)>/java.lang.StringBuilder.append/3	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void sendToAll(java.lang.String)>/java.lang.StringBuilder.toString/0	<java.lang.StringBuilder: java.lang.String toString()>
<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void sendToAll(java.lang.String)>/java.util.Collection.iterator/0	<java.util.Collection: java.util.Iterator iterator()>
<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void sendToAll(java.lang.String)>/java.util.Iterator.hasNext/0	<java.util.Iterator: boolean hasNext()>
<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void sendToAll(java.lang.String)>/java.util.Iterator.next/0	<java.util.Iterator: java.lang.Object next()>
<com.matt_richardson.gocd.websocket_notifier.WebSocketPipelineListener: void notify(com.thoughtworks.go.plugin.api.request.GoPluginApiRequest)>/com.thoughtworks.go.plugin.api.request.GoPluginApiRequest.requestBody/0	<com.thoughtworks.go.plugin.api.request.GoPluginApiRequest: java.lang.String requestBody()>
<com.matt_richardson.gocd.websocket_notifier.WebSocketPipelineListener: void notify(com.thoughtworks.go.plugin.api.request.GoPluginApiRequest)>/com.thoughtworks.go.plugin.api.request.GoPluginApiRequest.requestBody/1	<com.thoughtworks.go.plugin.api.request.GoPluginApiRequest: java.lang.String requestBody()>
<com.matt_richardson.gocd.websocket_notifier.WebSocketPipelineListener: void notify(com.thoughtworks.go.plugin.api.request.GoPluginApiRequest)>/com.thoughtworks.go.plugin.api.request.GoPluginApiRequest.requestName/0	<com.thoughtworks.go.plugin.api.request.GoPluginApiRequest: java.lang.String requestName()>
<com.matt_richardson.gocd.websocket_notifier.WebSocketPipelineListener: void notify(com.thoughtworks.go.plugin.api.request.GoPluginApiRequest)>/java.lang.StringBuilder.append/0	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.matt_richardson.gocd.websocket_notifier.WebSocketPipelineListener: void notify(com.thoughtworks.go.plugin.api.request.GoPluginApiRequest)>/java.lang.StringBuilder.append/1	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.matt_richardson.gocd.websocket_notifier.WebSocketPipelineListener: void notify(com.thoughtworks.go.plugin.api.request.GoPluginApiRequest)>/java.lang.StringBuilder.append/2	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.matt_richardson.gocd.websocket_notifier.WebSocketPipelineListener: void notify(com.thoughtworks.go.plugin.api.request.GoPluginApiRequest)>/java.lang.StringBuilder.append/3	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.matt_richardson.gocd.websocket_notifier.WebSocketPipelineListener: void notify(com.thoughtworks.go.plugin.api.request.GoPluginApiRequest)>/java.lang.StringBuilder.append/4	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.matt_richardson.gocd.websocket_notifier.WebSocketPipelineListener: void notify(com.thoughtworks.go.plugin.api.request.GoPluginApiRequest)>/java.lang.StringBuilder.toString/0	<java.lang.StringBuilder: java.lang.String toString()>
<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin$1: void <init>(com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin,int,java.lang.String)>/com.thoughtworks.go.plugin.api.response.GoPluginApiResponse.<init>/0	<com.thoughtworks.go.plugin.api.response.GoPluginApiResponse: void <init>()>
<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: com.thoughtworks.go.plugin.api.GoPluginIdentifier pluginIdentifier()>/com.thoughtworks.go.plugin.api.GoPluginIdentifier.<init>/0	<com.thoughtworks.go.plugin.api.GoPluginIdentifier: void <init>(java.lang.String,java.util.List)>
<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: com.thoughtworks.go.plugin.api.response.GoPluginApiResponse handle(com.thoughtworks.go.plugin.api.request.GoPluginApiRequest)>/com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin.handleNotificationsInterestedIn/0	<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: com.thoughtworks.go.plugin.api.response.GoPluginApiResponse handleNotificationsInterestedIn()>
<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: com.thoughtworks.go.plugin.api.response.GoPluginApiResponse handle(com.thoughtworks.go.plugin.api.request.GoPluginApiRequest)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>()>
<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: com.thoughtworks.go.plugin.api.response.GoPluginApiResponse handleNotificationsInterestedIn()>/com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin.renderJSON/0	<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: com.thoughtworks.go.plugin.api.response.GoPluginApiResponse renderJSON(int,java.lang.Object)>
<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: com.thoughtworks.go.plugin.api.response.GoPluginApiResponse handleNotificationsInterestedIn()>/java.util.HashMap.<init>/0	<java.util.HashMap: void <init>()>
<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: com.thoughtworks.go.plugin.api.response.GoPluginApiResponse handleStageNotification(com.thoughtworks.go.plugin.api.request.GoPluginApiRequest)>/java.util.ArrayList.<init>/0	<java.util.ArrayList: void <init>()>
<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: com.thoughtworks.go.plugin.api.response.GoPluginApiResponse handleStageNotification(com.thoughtworks.go.plugin.api.request.GoPluginApiRequest)>/java.util.HashMap.<init>/0	<java.util.HashMap: void <init>()>
<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: com.thoughtworks.go.plugin.api.response.GoPluginApiResponse renderJSON(int,java.lang.Object)>/com.google.gson.GsonBuilder.<init>/0	<com.google.gson.GsonBuilder: void <init>()>
<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: com.thoughtworks.go.plugin.api.response.GoPluginApiResponse renderJSON(int,java.lang.Object)>/com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin$1.<init>/0	<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin$1: void <init>(com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin,int,java.lang.String)>
<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: void <init>()>/java.lang.Object.<init>/0	<java.lang.Object: void <init>()>
<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: void initializeGoApplicationAccessor(com.thoughtworks.go.plugin.api.GoApplicationAccessor)>/java.lang.StringBuilder.<init>/1	<java.lang.StringBuilder: void <init>()>
<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void <init>(int)>/java.net.InetSocketAddress.<init>/0	<java.net.InetSocketAddress: void <init>(int)>
<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void <init>(int)>/org.java_websocket.server.WebSocketServer.<init>/0	<org.java_websocket.server.WebSocketServer: void <init>(java.net.InetSocketAddress)>
<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void sendToAll(java.lang.String)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>()>
<com.matt_richardson.gocd.websocket_notifier.WebSocketPipelineListener: void notify(com.thoughtworks.go.plugin.api.request.GoPluginApiRequest)>/java.lang.StringBuilder.<init>/0	<java.lang.StringBuilder: void <init>()>
<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: com.thoughtworks.go.plugin.api.response.GoPluginApiResponse handleNotificationsInterestedIn()>/java.util.Arrays.asList/0	<java.util.Arrays: java.util.List asList(java.lang.Object[])>
<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: void <clinit>()>/com.thoughtworks.go.plugin.api.logging.Logger.getLoggerFor/0	<com.thoughtworks.go.plugin.api.logging.Logger: com.thoughtworks.go.plugin.api.logging.Logger getLoggerFor(java.lang.Class)>
<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin: void <clinit>()>/java.util.Arrays.asList/0	<java.util.Arrays: java.util.List asList(java.lang.Object[])>
<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void <init>(int)>/com.thoughtworks.go.plugin.api.logging.Logger.getLoggerFor/0	<com.thoughtworks.go.plugin.api.logging.Logger: com.thoughtworks.go.plugin.api.logging.Logger getLoggerFor(java.lang.Class)>
