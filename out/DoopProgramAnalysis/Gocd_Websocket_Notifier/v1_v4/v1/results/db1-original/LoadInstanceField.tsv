<com.matt_richardson.gocd.websocket_notifier.WebSocketPipelineListener: void notify(com.thoughtworks.go.plugin.api.request.GoPluginApiRequest)>/this#_0	<com.matt_richardson.gocd.websocket_notifier.WebSocketPipelineListener: com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer webSocketServer>	<com.matt_richardson.gocd.websocket_notifier.WebSocketPipelineListener: void notify(com.thoughtworks.go.plugin.api.request.GoPluginApiRequest)>/$stack12	<com.matt_richardson.gocd.websocket_notifier.WebSocketPipelineListener: void notify(com.thoughtworks.go.plugin.api.request.GoPluginApiRequest)>
<com.matt_richardson.gocd.websocket_notifier.WebSocketPipelineListener: void notify(com.thoughtworks.go.plugin.api.request.GoPluginApiRequest)>/this#_0	<com.matt_richardson.gocd.websocket_notifier.WebSocketPipelineListener: com.thoughtworks.go.plugin.api.logging.Logger LOGGER>	<com.matt_richardson.gocd.websocket_notifier.WebSocketPipelineListener: void notify(com.thoughtworks.go.plugin.api.request.GoPluginApiRequest)>/$stack3	<com.matt_richardson.gocd.websocket_notifier.WebSocketPipelineListener: void notify(com.thoughtworks.go.plugin.api.request.GoPluginApiRequest)>
<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin$1: int responseCode()>/this#_0	<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin$1: int val$responseCode>	<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin$1: int responseCode()>/$stack1	<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin$1: int responseCode()>
<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin$1: java.lang.String responseBody()>/this#_0	<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin$1: java.lang.String val$json>	<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin$1: java.lang.String responseBody()>/$stack1	<com.matt_richardson.gocd.websocket_notifier.GoNotificationPlugin$1: java.lang.String responseBody()>
<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void onOpen(org.java_websocket.WebSocket,org.java_websocket.handshake.ClientHandshake)>/this#_0	<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: com.thoughtworks.go.plugin.api.logging.Logger LOGGER>	<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void onOpen(org.java_websocket.WebSocket,org.java_websocket.handshake.ClientHandshake)>/$stack9	<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void onOpen(org.java_websocket.WebSocket,org.java_websocket.handshake.ClientHandshake)>
<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void onClose(org.java_websocket.WebSocket,int,java.lang.String,boolean)>/this#_0	<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: com.thoughtworks.go.plugin.api.logging.Logger LOGGER>	<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void onClose(org.java_websocket.WebSocket,int,java.lang.String,boolean)>/$stack10	<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void onClose(org.java_websocket.WebSocket,int,java.lang.String,boolean)>
<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void onMessage(org.java_websocket.WebSocket,java.lang.String)>/this#_0	<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: com.thoughtworks.go.plugin.api.logging.Logger LOGGER>	<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void onMessage(org.java_websocket.WebSocket,java.lang.String)>/$stack4	<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void onMessage(org.java_websocket.WebSocket,java.lang.String)>
<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void sendToAll(java.lang.String)>/this#_0	<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: com.thoughtworks.go.plugin.api.logging.Logger LOGGER>	<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void sendToAll(java.lang.String)>/$stack12	<com.matt_richardson.gocd.websocket_notifier.PipelineWebSocketServer: void sendToAll(java.lang.String)>
