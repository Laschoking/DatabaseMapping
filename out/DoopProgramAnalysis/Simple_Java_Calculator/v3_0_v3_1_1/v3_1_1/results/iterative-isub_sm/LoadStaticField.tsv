<simplejavacalculator.Calculator$MonoOperatorModes: simplejavacalculator.Calculator$MonoOperatorModes rate>	<simplejavacalculator.Calculator$MonoOperatorModes: void <clinit>()>/$stack17	<simplejavacalculator.Calculator$MonoOperatorModes: void <clinit>()>	0
<simplejavacalculator.Calculator$MonoOperatorModes: simplejavacalculator.Calculator$MonoOperatorModes rate>	<simplejavacalculator.UI: void actionPerformed(java.awt.event.ActionEvent)>/$stack39	<simplejavacalculator.UI: void actionPerformed(java.awt.event.ActionEvent)>	0
<simplejavacalculator.Calculator$MonoOperatorModes: simplejavacalculator.Calculator$MonoOperatorModes rate>	<simplejavacalculator.Calculator: java.lang.Double calculateMono(simplejavacalculator.Calculator$MonoOperatorModes,java.lang.Double)>/$stack10	<simplejavacalculator.Calculator: java.lang.Double calculateMono(simplejavacalculator.Calculator$MonoOperatorModes,java.lang.Double)>	0
<simplejavacalculator.Calculator$BiOperatorModes: simplejavacalculator.Calculator$BiOperatorModes xpowerofy>	<simplejavacalculator.UI: void actionPerformed(java.awt.event.ActionEvent)>/$stack87	<simplejavacalculator.UI: void actionPerformed(java.awt.event.ActionEvent)>	0
<simplejavacalculator.Calculator$BiOperatorModes: simplejavacalculator.Calculator$BiOperatorModes xpowerofy>	<simplejavacalculator.Calculator$BiOperatorModes: void <clinit>()>/$stack12	<simplejavacalculator.Calculator$BiOperatorModes: void <clinit>()>	0
<simplejavacalculator.Calculator$BiOperatorModes: simplejavacalculator.Calculator$BiOperatorModes xpowerofy>	<simplejavacalculator.Calculator: java.lang.Double calculateBiImpl()>/$stack11	<simplejavacalculator.Calculator: java.lang.Double calculateBiImpl()>	0
<simplejavacalculator.Calculator$MonoOperatorModes: simplejavacalculator.Calculator$MonoOperatorModes[] $VALUES>	<simplejavacalculator.Calculator$MonoOperatorModes: simplejavacalculator.Calculator$MonoOperatorModes[] values()>/$stack0	<simplejavacalculator.Calculator$MonoOperatorModes: simplejavacalculator.Calculator$MonoOperatorModes[] values()>	1
<simplejavacalculator.Calculator$MonoOperatorModes: simplejavacalculator.Calculator$MonoOperatorModes[] $VALUES>	<simplejavacalculator.Calculator$MonoOperatorModes: simplejavacalculator.Calculator$MonoOperatorModes[] values()>/$stack0	<simplejavacalculator.Calculator$MonoOperatorModes: simplejavacalculator.Calculator$MonoOperatorModes[] values()>	10
<simplejavacalculator.Calculator$MonoOperatorModes: simplejavacalculator.Calculator$MonoOperatorModes tan>	<simplejavacalculator.UI: void actionPerformed(java.awt.event.ActionEvent)>/$stack51	<simplejavacalculator.UI: void actionPerformed(java.awt.event.ActionEvent)>	0
<simplejavacalculator.Calculator$MonoOperatorModes: simplejavacalculator.Calculator$MonoOperatorModes tan>	<simplejavacalculator.Calculator$MonoOperatorModes: void <clinit>()>/$stack15	<simplejavacalculator.Calculator$MonoOperatorModes: void <clinit>()>	0
<simplejavacalculator.Calculator$MonoOperatorModes: simplejavacalculator.Calculator$MonoOperatorModes tan>	<simplejavacalculator.Calculator: java.lang.Double calculateMono(simplejavacalculator.Calculator$MonoOperatorModes,java.lang.Double)>/$stack8	<simplejavacalculator.Calculator: java.lang.Double calculateMono(simplejavacalculator.Calculator$MonoOperatorModes,java.lang.Double)>	0
<simplejavacalculator.Calculator$MonoOperatorModes: simplejavacalculator.Calculator$MonoOperatorModes squareRoot>	<simplejavacalculator.UI: void actionPerformed(java.awt.event.ActionEvent)>/$stack75	<simplejavacalculator.UI: void actionPerformed(java.awt.event.ActionEvent)>	0
<simplejavacalculator.Calculator$MonoOperatorModes: simplejavacalculator.Calculator$MonoOperatorModes squareRoot>	<simplejavacalculator.Calculator$MonoOperatorModes: void <clinit>()>/$stack11	<simplejavacalculator.Calculator$MonoOperatorModes: void <clinit>()>	0
<simplejavacalculator.Calculator$MonoOperatorModes: simplejavacalculator.Calculator$MonoOperatorModes squareRoot>	<simplejavacalculator.Calculator: java.lang.Double calculateMono(simplejavacalculator.Calculator$MonoOperatorModes,java.lang.Double)>/$stack4	<simplejavacalculator.Calculator: java.lang.Double calculateMono(simplejavacalculator.Calculator$MonoOperatorModes,java.lang.Double)>	0
<simplejavacalculator.Calculator$MonoOperatorModes: simplejavacalculator.Calculator$MonoOperatorModes oneDevidedBy>	<simplejavacalculator.Calculator$MonoOperatorModes: void <clinit>()>/$stack12	<simplejavacalculator.Calculator$MonoOperatorModes: void <clinit>()>	0
<simplejavacalculator.Calculator$MonoOperatorModes: simplejavacalculator.Calculator$MonoOperatorModes oneDevidedBy>	<simplejavacalculator.UI: void actionPerformed(java.awt.event.ActionEvent)>/$stack69	<simplejavacalculator.UI: void actionPerformed(java.awt.event.ActionEvent)>	0
<simplejavacalculator.Calculator$MonoOperatorModes: simplejavacalculator.Calculator$MonoOperatorModes oneDevidedBy>	<simplejavacalculator.Calculator: java.lang.Double calculateMono(simplejavacalculator.Calculator$MonoOperatorModes,java.lang.Double)>/$stack5	<simplejavacalculator.Calculator: java.lang.Double calculateMono(simplejavacalculator.Calculator$MonoOperatorModes,java.lang.Double)>	0
<simplejavacalculator.Calculator$BiOperatorModes: simplejavacalculator.Calculator$BiOperatorModes multiply>	<simplejavacalculator.UI: void actionPerformed(java.awt.event.ActionEvent)>/$stack99	<simplejavacalculator.UI: void actionPerformed(java.awt.event.ActionEvent)>	0
<simplejavacalculator.Calculator$BiOperatorModes: simplejavacalculator.Calculator$BiOperatorModes multiply>	<simplejavacalculator.Calculator$BiOperatorModes: void <clinit>()>/$stack10	<simplejavacalculator.Calculator$BiOperatorModes: void <clinit>()>	0
<simplejavacalculator.Calculator$BiOperatorModes: simplejavacalculator.Calculator$BiOperatorModes multiply>	<simplejavacalculator.Calculator: java.lang.Double calculateBiImpl()>/$stack7	<simplejavacalculator.Calculator: java.lang.Double calculateBiImpl()>	0
<simplejavacalculator.Calculator$MonoOperatorModes: simplejavacalculator.Calculator$MonoOperatorModes square>	<simplejavacalculator.Calculator$MonoOperatorModes: void <clinit>()>/$stack10	<simplejavacalculator.Calculator$MonoOperatorModes: void <clinit>()>	0
<simplejavacalculator.Calculator$MonoOperatorModes: simplejavacalculator.Calculator$MonoOperatorModes square>	<simplejavacalculator.UI: void actionPerformed(java.awt.event.ActionEvent)>/$stack81	<simplejavacalculator.UI: void actionPerformed(java.awt.event.ActionEvent)>	0
<simplejavacalculator.Calculator$MonoOperatorModes: simplejavacalculator.Calculator$MonoOperatorModes square>	<simplejavacalculator.Calculator: java.lang.Double calculateMono(simplejavacalculator.Calculator$MonoOperatorModes,java.lang.Double)>/$stack3	<simplejavacalculator.Calculator: java.lang.Double calculateMono(simplejavacalculator.Calculator$MonoOperatorModes,java.lang.Double)>	1
<simplejavacalculator.Calculator$MonoOperatorModes: simplejavacalculator.Calculator$MonoOperatorModes square>	<simplejavacalculator.Calculator: java.lang.Double calculateMono(simplejavacalculator.Calculator$MonoOperatorModes,java.lang.Double)>/$stack3	<simplejavacalculator.Calculator: java.lang.Double calculateMono(simplejavacalculator.Calculator$MonoOperatorModes,java.lang.Double)>	10
<simplejavacalculator.Calculator$MonoOperatorModes: simplejavacalculator.Calculator$MonoOperatorModes log>	<simplejavacalculator.Calculator$MonoOperatorModes: void <clinit>()>/$stack16	<simplejavacalculator.Calculator$MonoOperatorModes: void <clinit>()>	0
<simplejavacalculator.Calculator$MonoOperatorModes: simplejavacalculator.Calculator$MonoOperatorModes log>	<simplejavacalculator.Calculator: java.lang.Double calculateMono(simplejavacalculator.Calculator$MonoOperatorModes,java.lang.Double)>/$stack9	<simplejavacalculator.Calculator: java.lang.Double calculateMono(simplejavacalculator.Calculator$MonoOperatorModes,java.lang.Double)>	0
<simplejavacalculator.Calculator$MonoOperatorModes: simplejavacalculator.Calculator$MonoOperatorModes log>	<simplejavacalculator.UI: void actionPerformed(java.awt.event.ActionEvent)>/$stack45	<simplejavacalculator.UI: void actionPerformed(java.awt.event.ActionEvent)>	0
<simplejavacalculator.Calculator$BiOperatorModes: simplejavacalculator.Calculator$BiOperatorModes[] $VALUES>	<simplejavacalculator.Calculator$BiOperatorModes: simplejavacalculator.Calculator$BiOperatorModes[] values()>/$stack0	<simplejavacalculator.Calculator$BiOperatorModes: simplejavacalculator.Calculator$BiOperatorModes[] values()>	1
<simplejavacalculator.Calculator$BiOperatorModes: simplejavacalculator.Calculator$BiOperatorModes[] $VALUES>	<simplejavacalculator.Calculator$BiOperatorModes: simplejavacalculator.Calculator$BiOperatorModes[] values()>/$stack0	<simplejavacalculator.Calculator$BiOperatorModes: simplejavacalculator.Calculator$BiOperatorModes[] values()>	10
<simplejavacalculator.Calculator$BiOperatorModes: simplejavacalculator.Calculator$BiOperatorModes divide>	<simplejavacalculator.Calculator: java.lang.Double calculateBiImpl()>/$stack9	<simplejavacalculator.Calculator: java.lang.Double calculateBiImpl()>	0
<simplejavacalculator.Calculator$BiOperatorModes: simplejavacalculator.Calculator$BiOperatorModes divide>	<simplejavacalculator.Calculator$BiOperatorModes: void <clinit>()>/$stack11	<simplejavacalculator.Calculator$BiOperatorModes: void <clinit>()>	0
<simplejavacalculator.Calculator$BiOperatorModes: simplejavacalculator.Calculator$BiOperatorModes divide>	<simplejavacalculator.UI: void actionPerformed(java.awt.event.ActionEvent)>/$stack93	<simplejavacalculator.UI: void actionPerformed(java.awt.event.ActionEvent)>	0
<java.lang.System: java.io.PrintStream err>	<simplejavacalculator.UI: void parsetoBinary()>/$stack13	<simplejavacalculator.UI: void parsetoBinary()>	0
<simplejavacalculator.Calculator$MonoOperatorModes: simplejavacalculator.Calculator$MonoOperatorModes sin>	<simplejavacalculator.UI: void actionPerformed(java.awt.event.ActionEvent)>/$stack57	<simplejavacalculator.UI: void actionPerformed(java.awt.event.ActionEvent)>	0
<simplejavacalculator.Calculator$MonoOperatorModes: simplejavacalculator.Calculator$MonoOperatorModes sin>	<simplejavacalculator.Calculator$MonoOperatorModes: void <clinit>()>/$stack14	<simplejavacalculator.Calculator$MonoOperatorModes: void <clinit>()>	0
<simplejavacalculator.Calculator$MonoOperatorModes: simplejavacalculator.Calculator$MonoOperatorModes sin>	<simplejavacalculator.Calculator: java.lang.Double calculateMono(simplejavacalculator.Calculator$MonoOperatorModes,java.lang.Double)>/$stack7	<simplejavacalculator.Calculator: java.lang.Double calculateMono(simplejavacalculator.Calculator$MonoOperatorModes,java.lang.Double)>	0
<simplejavacalculator.Calculator$MonoOperatorModes: simplejavacalculator.Calculator$MonoOperatorModes cos>	<simplejavacalculator.UI: void actionPerformed(java.awt.event.ActionEvent)>/$stack63	<simplejavacalculator.UI: void actionPerformed(java.awt.event.ActionEvent)>	0
<simplejavacalculator.Calculator$MonoOperatorModes: simplejavacalculator.Calculator$MonoOperatorModes cos>	<simplejavacalculator.Calculator$MonoOperatorModes: void <clinit>()>/$stack13	<simplejavacalculator.Calculator$MonoOperatorModes: void <clinit>()>	0
<simplejavacalculator.Calculator$MonoOperatorModes: simplejavacalculator.Calculator$MonoOperatorModes cos>	<simplejavacalculator.Calculator: java.lang.Double calculateMono(simplejavacalculator.Calculator$MonoOperatorModes,java.lang.Double)>/$stack6	<simplejavacalculator.Calculator: java.lang.Double calculateMono(simplejavacalculator.Calculator$MonoOperatorModes,java.lang.Double)>	0
<simplejavacalculator.Calculator$MonoOperatorModes: simplejavacalculator.Calculator$MonoOperatorModes abs>	<simplejavacalculator.UI: void actionPerformed(java.awt.event.ActionEvent)>/$stack33	<simplejavacalculator.UI: void actionPerformed(java.awt.event.ActionEvent)>	0
<simplejavacalculator.Calculator$MonoOperatorModes: simplejavacalculator.Calculator$MonoOperatorModes abs>	<simplejavacalculator.Calculator$MonoOperatorModes: void <clinit>()>/$stack18	<simplejavacalculator.Calculator$MonoOperatorModes: void <clinit>()>	0
<simplejavacalculator.Calculator$MonoOperatorModes: simplejavacalculator.Calculator$MonoOperatorModes abs>	<simplejavacalculator.Calculator: java.lang.Double calculateMono(simplejavacalculator.Calculator$MonoOperatorModes,java.lang.Double)>/$stack11	<simplejavacalculator.Calculator: java.lang.Double calculateMono(simplejavacalculator.Calculator$MonoOperatorModes,java.lang.Double)>	0
<simplejavacalculator.Calculator$BiOperatorModes: simplejavacalculator.Calculator$BiOperatorModes add>	<simplejavacalculator.UI: void actionPerformed(java.awt.event.ActionEvent)>/$stack111	<simplejavacalculator.UI: void actionPerformed(java.awt.event.ActionEvent)>	0
<simplejavacalculator.Calculator$BiOperatorModes: simplejavacalculator.Calculator$BiOperatorModes add>	<simplejavacalculator.Calculator$BiOperatorModes: void <clinit>()>/$stack8	<simplejavacalculator.Calculator$BiOperatorModes: void <clinit>()>	0
<simplejavacalculator.Calculator$BiOperatorModes: simplejavacalculator.Calculator$BiOperatorModes add>	<simplejavacalculator.Calculator: java.lang.Double calculateBiImpl()>/$stack3	<simplejavacalculator.Calculator: java.lang.Double calculateBiImpl()>	1
<simplejavacalculator.Calculator$BiOperatorModes: simplejavacalculator.Calculator$BiOperatorModes add>	<simplejavacalculator.Calculator: java.lang.Double calculateBiImpl()>/$stack3	<simplejavacalculator.Calculator: java.lang.Double calculateBiImpl()>	10
<simplejavacalculator.Calculator$BiOperatorModes: simplejavacalculator.Calculator$BiOperatorModes minus>	<simplejavacalculator.UI: void actionPerformed(java.awt.event.ActionEvent)>/$stack105	<simplejavacalculator.UI: void actionPerformed(java.awt.event.ActionEvent)>	0
<simplejavacalculator.Calculator$BiOperatorModes: simplejavacalculator.Calculator$BiOperatorModes minus>	<simplejavacalculator.Calculator: java.lang.Double calculateBiImpl()>/$stack5	<simplejavacalculator.Calculator: java.lang.Double calculateBiImpl()>	0
<simplejavacalculator.Calculator$BiOperatorModes: simplejavacalculator.Calculator$BiOperatorModes minus>	<simplejavacalculator.Calculator$BiOperatorModes: void <clinit>()>/$stack9	<simplejavacalculator.Calculator$BiOperatorModes: void <clinit>()>	0
<simplejavacalculator.Calculator$BiOperatorModes: simplejavacalculator.Calculator$BiOperatorModes normal>	<simplejavacalculator.Calculator: java.lang.Double calculateEqual(java.lang.Double)>/$stack2	<simplejavacalculator.Calculator: java.lang.Double calculateEqual(java.lang.Double)>	1
<simplejavacalculator.Calculator$BiOperatorModes: simplejavacalculator.Calculator$BiOperatorModes normal>	<simplejavacalculator.Calculator: java.lang.Double calculateEqual(java.lang.Double)>/$stack2	<simplejavacalculator.Calculator: java.lang.Double calculateEqual(java.lang.Double)>	10
<simplejavacalculator.Calculator$BiOperatorModes: simplejavacalculator.Calculator$BiOperatorModes normal>	<simplejavacalculator.Calculator: java.lang.Double calculateBi(simplejavacalculator.Calculator$BiOperatorModes,java.lang.Double)>/$stack3	<simplejavacalculator.Calculator: java.lang.Double calculateBi(simplejavacalculator.Calculator$BiOperatorModes,java.lang.Double)>	1
<simplejavacalculator.Calculator$BiOperatorModes: simplejavacalculator.Calculator$BiOperatorModes normal>	<simplejavacalculator.Calculator: java.lang.Double calculateBi(simplejavacalculator.Calculator$BiOperatorModes,java.lang.Double)>/$stack3	<simplejavacalculator.Calculator: java.lang.Double calculateBi(simplejavacalculator.Calculator$BiOperatorModes,java.lang.Double)>	10
<simplejavacalculator.Calculator$BiOperatorModes: simplejavacalculator.Calculator$BiOperatorModes normal>	<simplejavacalculator.Calculator$BiOperatorModes: void <clinit>()>/$stack7	<simplejavacalculator.Calculator$BiOperatorModes: void <clinit>()>	0
<simplejavacalculator.Calculator$BiOperatorModes: simplejavacalculator.Calculator$BiOperatorModes normal>	<simplejavacalculator.Calculator: void <init>()>/$stack1	<simplejavacalculator.Calculator: void <init>()>	1
<simplejavacalculator.Calculator$BiOperatorModes: simplejavacalculator.Calculator$BiOperatorModes normal>	<simplejavacalculator.Calculator: void <init>()>/$stack1	<simplejavacalculator.Calculator: void <init>()>	10
<simplejavacalculator.Calculator$BiOperatorModes: simplejavacalculator.Calculator$BiOperatorModes normal>	<simplejavacalculator.Calculator: java.lang.Double calculateBiImpl()>/$stack1	<simplejavacalculator.Calculator: java.lang.Double calculateBiImpl()>	1
<simplejavacalculator.Calculator$BiOperatorModes: simplejavacalculator.Calculator$BiOperatorModes normal>	<simplejavacalculator.Calculator: java.lang.Double calculateBiImpl()>/$stack1	<simplejavacalculator.Calculator: java.lang.Double calculateBiImpl()>	10
<simplejavacalculator.Calculator$BiOperatorModes: simplejavacalculator.Calculator$BiOperatorModes normal>	<simplejavacalculator.Calculator: java.lang.Double reset()>/$stack3	<simplejavacalculator.Calculator: java.lang.Double reset()>	1
<simplejavacalculator.Calculator$BiOperatorModes: simplejavacalculator.Calculator$BiOperatorModes normal>	<simplejavacalculator.Calculator: java.lang.Double reset()>/$stack3	<simplejavacalculator.Calculator: java.lang.Double reset()>	10
<java.lang.System: java.io.PrintStream out>	<simplejavacalculator.SimpleJavaCalculator: void main(java.lang.String[])>/$stack4	<simplejavacalculator.SimpleJavaCalculator: void main(java.lang.String[])>	10
