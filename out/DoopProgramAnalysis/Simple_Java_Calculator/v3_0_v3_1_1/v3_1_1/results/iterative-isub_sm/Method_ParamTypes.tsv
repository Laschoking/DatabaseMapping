<simplejavacalculator.UI: void init()>		1
<simplejavacalculator.UI: void init()>		10
<simplejavacalculator.Calculator$MonoOperatorModes: void <clinit>()>		1
<simplejavacalculator.Calculator$MonoOperatorModes: void <clinit>()>		10
<simplejavacalculator.Calculator$MonoOperatorModes: simplejavacalculator.Calculator$MonoOperatorModes valueOf(java.lang.String)>	java.lang.String	1
<simplejavacalculator.Calculator$MonoOperatorModes: simplejavacalculator.Calculator$MonoOperatorModes valueOf(java.lang.String)>	java.lang.String	10
<simplejavacalculator.Calculator: java.lang.Double calculateBiImpl()>		1
<simplejavacalculator.Calculator: java.lang.Double calculateBiImpl()>		10
<simplejavacalculator.UI: void parsetoBinary()>		1
<simplejavacalculator.UI: void parsetoBinary()>		10
<simplejavacalculator.UI: void <init>()>		1
<simplejavacalculator.UI: void <init>()>		10
<simplejavacalculator.UI: void actionPerformed(java.awt.event.ActionEvent)>	java.awt.event.ActionEvent	1
<simplejavacalculator.UI: void actionPerformed(java.awt.event.ActionEvent)>	java.awt.event.ActionEvent	10
<simplejavacalculator.Calculator: java.lang.Double calculateMono(simplejavacalculator.Calculator$MonoOperatorModes,java.lang.Double)>	simplejavacalculator.Calculator$MonoOperatorModes,java.lang.Double	1
<simplejavacalculator.Calculator: java.lang.Double calculateMono(simplejavacalculator.Calculator$MonoOperatorModes,java.lang.Double)>	simplejavacalculator.Calculator$MonoOperatorModes,java.lang.Double	10
<simplejavacalculator.Calculator: java.lang.Double calculateBi(simplejavacalculator.Calculator$BiOperatorModes,java.lang.Double)>	simplejavacalculator.Calculator$BiOperatorModes,java.lang.Double	1
<simplejavacalculator.Calculator: java.lang.Double calculateBi(simplejavacalculator.Calculator$BiOperatorModes,java.lang.Double)>	simplejavacalculator.Calculator$BiOperatorModes,java.lang.Double	10
<simplejavacalculator.Calculator$BiOperatorModes: void <clinit>()>		1
<simplejavacalculator.Calculator$BiOperatorModes: void <clinit>()>		10
<simplejavacalculator.Calculator$BiOperatorModes: void <init>(java.lang.String,int)>	java.lang.String,int	1
<simplejavacalculator.Calculator$BiOperatorModes: void <init>(java.lang.String,int)>	java.lang.String,int	10
<simplejavacalculator.UI: java.lang.Double reader()>		1
<simplejavacalculator.UI: java.lang.Double reader()>		10
<simplejavacalculator.Calculator: java.lang.Double reset()>		1
<simplejavacalculator.Calculator: java.lang.Double reset()>		10
<simplejavacalculator.SimpleJavaCalculator: void <init>()>		1
<simplejavacalculator.SimpleJavaCalculator: void <init>()>		10
<simplejavacalculator.Calculator: java.lang.Double calculateEqual(java.lang.Double)>	java.lang.Double	1
<simplejavacalculator.Calculator: java.lang.Double calculateEqual(java.lang.Double)>	java.lang.Double	10
<simplejavacalculator.SimpleJavaCalculator: void main(java.lang.String[])>	java.lang.String[]	1
<simplejavacalculator.SimpleJavaCalculator: void main(java.lang.String[])>	java.lang.String[]	10
<simplejavacalculator.Calculator$MonoOperatorModes: simplejavacalculator.Calculator$MonoOperatorModes[] values()>		1
<simplejavacalculator.Calculator$MonoOperatorModes: simplejavacalculator.Calculator$MonoOperatorModes[] values()>		10
<simplejavacalculator.Calculator$MonoOperatorModes: void <init>(java.lang.String,int)>	java.lang.String,int	1
<simplejavacalculator.Calculator$MonoOperatorModes: void <init>(java.lang.String,int)>	java.lang.String,int	10
<simplejavacalculator.Calculator: void <init>()>		1
<simplejavacalculator.Calculator: void <init>()>		10
<simplejavacalculator.Calculator$BiOperatorModes: simplejavacalculator.Calculator$BiOperatorModes valueOf(java.lang.String)>	java.lang.String	1
<simplejavacalculator.Calculator$BiOperatorModes: simplejavacalculator.Calculator$BiOperatorModes valueOf(java.lang.String)>	java.lang.String	10
<simplejavacalculator.UI: void writer(java.lang.Double)>	java.lang.Double	1
<simplejavacalculator.UI: void writer(java.lang.Double)>	java.lang.Double	10
<simplejavacalculator.Calculator$BiOperatorModes: simplejavacalculator.Calculator$BiOperatorModes[] values()>		1
<simplejavacalculator.Calculator$BiOperatorModes: simplejavacalculator.Calculator$BiOperatorModes[] values()>		10
<simplejavacalculator.BufferedImageCustom: java.awt.Image imageReturn()>		10
<simplejavacalculator.BufferedImageCustom: void <init>()>		10
