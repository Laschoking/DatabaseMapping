<simplejavacalculator.UI: void init()>	init	1
<simplejavacalculator.UI: void init()>	init	10
<simplejavacalculator.Calculator$MonoOperatorModes: void <clinit>()>	<clinit>	1
<simplejavacalculator.Calculator$MonoOperatorModes: void <clinit>()>	<clinit>	10
<simplejavacalculator.Calculator$MonoOperatorModes: simplejavacalculator.Calculator$MonoOperatorModes valueOf(java.lang.String)>	valueOf	1
<simplejavacalculator.Calculator$MonoOperatorModes: simplejavacalculator.Calculator$MonoOperatorModes valueOf(java.lang.String)>	valueOf	10
<simplejavacalculator.Calculator: java.lang.Double calculateBiImpl()>	calculateBiImpl	1
<simplejavacalculator.Calculator: java.lang.Double calculateBiImpl()>	calculateBiImpl	10
<simplejavacalculator.UI: void parsetoBinary()>	parsetoBinary	1
<simplejavacalculator.UI: void parsetoBinary()>	parsetoBinary	10
<simplejavacalculator.UI: void <init>()>	<init>	1
<simplejavacalculator.UI: void <init>()>	<init>	10
<simplejavacalculator.UI: void actionPerformed(java.awt.event.ActionEvent)>	actionPerformed	1
<simplejavacalculator.UI: void actionPerformed(java.awt.event.ActionEvent)>	actionPerformed	10
<simplejavacalculator.Calculator: java.lang.Double calculateMono(simplejavacalculator.Calculator$MonoOperatorModes,java.lang.Double)>	calculateMono	1
<simplejavacalculator.Calculator: java.lang.Double calculateMono(simplejavacalculator.Calculator$MonoOperatorModes,java.lang.Double)>	calculateMono	10
<simplejavacalculator.Calculator: java.lang.Double calculateBi(simplejavacalculator.Calculator$BiOperatorModes,java.lang.Double)>	calculateBi	1
<simplejavacalculator.Calculator: java.lang.Double calculateBi(simplejavacalculator.Calculator$BiOperatorModes,java.lang.Double)>	calculateBi	10
<simplejavacalculator.Calculator$BiOperatorModes: void <clinit>()>	<clinit>	1
<simplejavacalculator.Calculator$BiOperatorModes: void <clinit>()>	<clinit>	10
<simplejavacalculator.Calculator$BiOperatorModes: void <init>(java.lang.String,int)>	<init>	1
<simplejavacalculator.Calculator$BiOperatorModes: void <init>(java.lang.String,int)>	<init>	10
<simplejavacalculator.UI: java.lang.Double reader()>	reader	1
<simplejavacalculator.UI: java.lang.Double reader()>	reader	10
<simplejavacalculator.Calculator: java.lang.Double reset()>	reset	1
<simplejavacalculator.Calculator: java.lang.Double reset()>	reset	10
<simplejavacalculator.SimpleJavaCalculator: void <init>()>	<init>	1
<simplejavacalculator.SimpleJavaCalculator: void <init>()>	<init>	10
<simplejavacalculator.Calculator: java.lang.Double calculateEqual(java.lang.Double)>	calculateEqual	1
<simplejavacalculator.Calculator: java.lang.Double calculateEqual(java.lang.Double)>	calculateEqual	10
<simplejavacalculator.SimpleJavaCalculator: void main(java.lang.String[])>	main	1
<simplejavacalculator.SimpleJavaCalculator: void main(java.lang.String[])>	main	10
<simplejavacalculator.Calculator$MonoOperatorModes: simplejavacalculator.Calculator$MonoOperatorModes[] values()>	values	1
<simplejavacalculator.Calculator$MonoOperatorModes: simplejavacalculator.Calculator$MonoOperatorModes[] values()>	values	10
<simplejavacalculator.Calculator$MonoOperatorModes: void <init>(java.lang.String,int)>	<init>	1
<simplejavacalculator.Calculator$MonoOperatorModes: void <init>(java.lang.String,int)>	<init>	10
<simplejavacalculator.Calculator: void <init>()>	<init>	1
<simplejavacalculator.Calculator: void <init>()>	<init>	10
<simplejavacalculator.Calculator$BiOperatorModes: simplejavacalculator.Calculator$BiOperatorModes valueOf(java.lang.String)>	valueOf	1
<simplejavacalculator.Calculator$BiOperatorModes: simplejavacalculator.Calculator$BiOperatorModes valueOf(java.lang.String)>	valueOf	10
<simplejavacalculator.UI: void writer(java.lang.Double)>	writer	1
<simplejavacalculator.UI: void writer(java.lang.Double)>	writer	10
<simplejavacalculator.Calculator$BiOperatorModes: simplejavacalculator.Calculator$BiOperatorModes[] values()>	values	1
<simplejavacalculator.Calculator$BiOperatorModes: simplejavacalculator.Calculator$BiOperatorModes[] values()>	values	10
<simplejavacalculator.BufferedImageCustom: java.awt.Image imageReturn()>	imageReturn	10
<simplejavacalculator.BufferedImageCustom: void <init>()>	<init>	10
