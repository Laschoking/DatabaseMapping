java.io.IOException	<org.springframework.boot.loader.net.protocol.jar.UrlJarFileFactory: java.util.jar.JarFile createJarFile(java.net.URL,java.util.function.Consumer)>
java.io.IOException	<org.springframework.boot.loader.net.protocol.jar.UrlJarFileFactory: java.util.jar.JarFile createJarFileForLocalFile(java.net.URL,java.lang.Runtime$Version,java.util.function.Consumer)>
java.io.IOException	<org.springframework.boot.loader.net.protocol.jar.UrlJarFileFactory: java.util.jar.JarFile createJarFileForNested(java.net.URL,java.lang.Runtime$Version,java.util.function.Consumer)>
java.io.IOException	<org.springframework.boot.loader.nio.file.NestedFileSystem: void close()>
java.io.IOException	<org.springframework.boot.loader.net.protocol.jar.UrlJarFileFactory: java.util.jar.JarFile createJarFileForStream(java.net.URL,java.lang.Runtime$Version,java.util.function.Consumer)>
java.io.IOException	<org.springframework.boot.loader.net.protocol.jar.UrlJarFileFactory: java.util.jar.JarFile createJarFileForStream(java.io.InputStream,java.lang.Runtime$Version,java.util.function.Consumer)>
java.io.IOException	<org.springframework.boot.loader.nio.file.NestedFileSystem: java.nio.file.WatchService newWatchService()>
java.io.IOException	<org.springframework.boot.loader.nio.file.NestedByteChannel$Resources: void <init>(java.nio.file.Path,java.lang.String)>
java.io.IOException	<org.springframework.boot.loader.net.protocol.jar.UrlNestedJarFile: void <init>(java.io.File,java.lang.String,java.lang.Runtime$Version,java.util.function.Consumer)>
java.io.IOException	<org.springframework.boot.loader.net.protocol.jar.UrlNestedJarFile: java.util.jar.Manifest getManifest()>
java.io.IOException	<org.springframework.boot.loader.net.protocol.jar.UrlNestedJarFile: void close()>
java.io.IOException	<org.springframework.boot.loader.net.protocol.jar.UrlNestedJarFile: java.util.jar.Manifest lambda$new$0()>
java.lang.Exception	<org.springframework.boot.loader.launch.WarLauncher: void <init>()>
java.lang.Exception	<org.springframework.boot.loader.launch.Launcher: void launch(java.lang.String[])>
java.lang.Exception	<org.springframework.boot.loader.launch.WarLauncher: void <init>(org.springframework.boot.loader.launch.Archive)>
java.lang.Exception	<org.springframework.boot.loader.launch.WarLauncher: void main(java.lang.String[])>
java.lang.Exception	<org.springframework.boot.loader.launch.Launcher: java.lang.ClassLoader createClassLoader(java.util.Collection)>
java.lang.Exception	<org.springframework.boot.loader.launch.Launcher: void launch(java.lang.ClassLoader,java.lang.String,java.lang.String[])>
java.lang.Exception	<org.springframework.boot.loader.launch.Launcher: java.lang.String getMainClass()>
java.lang.Exception	<org.springframework.boot.loader.launch.Launcher: java.util.Set getClassPathUrls()>
java.io.IOException	<org.springframework.boot.loader.net.protocol.jar.JarUrlConnection$ConnectionInputStream: void close()>
java.io.IOException	<org.springframework.boot.loader.net.protocol.jar.JarUrlConnection$ConnectionInputStream: java.io.InputStream getDelegateInputStream()>
java.io.IOException	<org.springframework.boot.loader.net.protocol.jar.UrlJarManifest: java.util.jar.Manifest get()>
java.io.IOException	<org.springframework.boot.loader.net.protocol.jar.Handler: java.net.URLConnection openConnection(java.net.URL)>
java.io.IOException	<org.springframework.boot.loader.net.protocol.jar.UrlJarManifest: java.util.jar.Attributes getEntryAttributes(java.util.jar.JarEntry)>
java.io.IOException	<org.springframework.boot.loader.net.protocol.jar.UrlJarManifest: java.util.jar.Manifest supply()>
java.io.IOException	<org.springframework.boot.loader.zip.ZipLocalFileHeaderRecord: org.springframework.boot.loader.zip.ZipLocalFileHeaderRecord load(org.springframework.boot.loader.zip.DataBlock,long)>
java.io.IOException	<org.springframework.boot.loader.zip.ZipDataDescriptorRecord: org.springframework.boot.loader.zip.ZipDataDescriptorRecord load(org.springframework.boot.loader.zip.DataBlock,long)>
