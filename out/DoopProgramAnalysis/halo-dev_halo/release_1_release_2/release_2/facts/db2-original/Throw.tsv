<org.springframework.boot.loader.nio.file.NestedFileSystem: void <init>(org.springframework.boot.loader.nio.file.NestedFileSystemProvider,java.nio.file.Path)>/throw $stack4/0	13	<org.springframework.boot.loader.nio.file.NestedFileSystem: void <init>(org.springframework.boot.loader.nio.file.NestedFileSystemProvider,java.nio.file.Path)>/$stack4	<org.springframework.boot.loader.nio.file.NestedFileSystem: void <init>(org.springframework.boot.loader.nio.file.NestedFileSystemProvider,java.nio.file.Path)>
<org.springframework.boot.loader.nio.file.NestedFileSystem: void installZipFileSystemIfNecessary(java.lang.String)>/throw $stack27/0	23	<org.springframework.boot.loader.nio.file.NestedFileSystem: void installZipFileSystemIfNecessary(java.lang.String)>/$stack27	<org.springframework.boot.loader.nio.file.NestedFileSystem: void installZipFileSystemIfNecessary(java.lang.String)>
<org.springframework.boot.loader.nio.file.NestedFileSystem: void installZipFileSystemIfNecessary(java.lang.String)>/throw $stack25/0	46	<org.springframework.boot.loader.nio.file.NestedFileSystem: void installZipFileSystemIfNecessary(java.lang.String)>/$stack25	<org.springframework.boot.loader.nio.file.NestedFileSystem: void installZipFileSystemIfNecessary(java.lang.String)>
<org.springframework.boot.loader.net.protocol.jar.UrlJarFileFactory: java.util.jar.JarFile createJarFileForStream(java.net.URL,java.lang.Runtime$Version,java.util.function.Consumer)>/throw $stack9/0	18	<org.springframework.boot.loader.net.protocol.jar.UrlJarFileFactory: java.util.jar.JarFile createJarFileForStream(java.net.URL,java.lang.Runtime$Version,java.util.function.Consumer)>/$stack9	<org.springframework.boot.loader.net.protocol.jar.UrlJarFileFactory: java.util.jar.JarFile createJarFileForStream(java.net.URL,java.lang.Runtime$Version,java.util.function.Consumer)>
<org.springframework.boot.loader.net.protocol.jar.UrlJarFileFactory: java.util.jar.JarFile createJarFileForStream(java.io.InputStream,java.lang.Runtime$Version,java.util.function.Consumer)>/throw $stack13/0	22	<org.springframework.boot.loader.net.protocol.jar.UrlJarFileFactory: java.util.jar.JarFile createJarFileForStream(java.io.InputStream,java.lang.Runtime$Version,java.util.function.Consumer)>/$stack13	<org.springframework.boot.loader.net.protocol.jar.UrlJarFileFactory: java.util.jar.JarFile createJarFileForStream(java.io.InputStream,java.lang.Runtime$Version,java.util.function.Consumer)>
<org.springframework.boot.loader.nio.file.NestedFileSystem: void close()>/throw $stack17/0	38	<org.springframework.boot.loader.nio.file.NestedFileSystem: void close()>/$stack17	<org.springframework.boot.loader.nio.file.NestedFileSystem: void close()>
<org.springframework.boot.loader.nio.file.NestedFileSystem: java.nio.file.Path getPath(java.lang.String,java.lang.String[])>/throw $stack5/0	10	<org.springframework.boot.loader.nio.file.NestedFileSystem: java.nio.file.Path getPath(java.lang.String,java.lang.String[])>/$stack5	<org.springframework.boot.loader.nio.file.NestedFileSystem: java.nio.file.Path getPath(java.lang.String,java.lang.String[])>
<org.springframework.boot.loader.nio.file.NestedFileSystem: java.nio.file.PathMatcher getPathMatcher(java.lang.String)>/throw $stack2/0	6	<org.springframework.boot.loader.nio.file.NestedFileSystem: java.nio.file.PathMatcher getPathMatcher(java.lang.String)>/$stack2	<org.springframework.boot.loader.nio.file.NestedFileSystem: java.nio.file.PathMatcher getPathMatcher(java.lang.String)>
<org.springframework.boot.loader.nio.file.NestedFileSystem: java.nio.file.attribute.UserPrincipalLookupService getUserPrincipalLookupService()>/throw $stack1/0	5	<org.springframework.boot.loader.nio.file.NestedFileSystem: java.nio.file.attribute.UserPrincipalLookupService getUserPrincipalLookupService()>/$stack1	<org.springframework.boot.loader.nio.file.NestedFileSystem: java.nio.file.attribute.UserPrincipalLookupService getUserPrincipalLookupService()>
<org.springframework.boot.loader.nio.file.NestedFileSystem: java.nio.file.WatchService newWatchService()>/throw $stack1/0	5	<org.springframework.boot.loader.nio.file.NestedFileSystem: java.nio.file.WatchService newWatchService()>/$stack1	<org.springframework.boot.loader.nio.file.NestedFileSystem: java.nio.file.WatchService newWatchService()>
<org.springframework.boot.loader.nio.file.NestedFileSystem: void assertNotClosed()>/throw $stack2/0	6	<org.springframework.boot.loader.nio.file.NestedFileSystem: void assertNotClosed()>/$stack2	<org.springframework.boot.loader.nio.file.NestedFileSystem: void assertNotClosed()>
<org.springframework.boot.loader.launch.SystemPropertyUtils: java.lang.String parseStringValue(java.util.Properties,java.lang.String,java.lang.String,java.util.Set)>/throw $u1/0	36	<org.springframework.boot.loader.launch.SystemPropertyUtils: java.lang.String parseStringValue(java.util.Properties,java.lang.String,java.lang.String,java.util.Set)>/$u1	<org.springframework.boot.loader.launch.SystemPropertyUtils: java.lang.String parseStringValue(java.util.Properties,java.lang.String,java.lang.String,java.util.Set)>
<org.springframework.boot.loader.nio.file.NestedByteChannel$Resources: void releaseAll()>/throw $stack5/0	24	<org.springframework.boot.loader.nio.file.NestedByteChannel$Resources: void releaseAll()>/$stack5	<org.springframework.boot.loader.nio.file.NestedByteChannel$Resources: void releaseAll()>
<org.springframework.boot.loader.launch.Launcher: void launch(java.lang.String[])>/throw $stack21/0	25	<org.springframework.boot.loader.launch.Launcher: void launch(java.lang.String[])>/$stack21	<org.springframework.boot.loader.launch.Launcher: void launch(java.lang.String[])>
<org.springframework.boot.loader.net.util.UrlDecoder: byte unescape(java.lang.String,int)>/throw $stack8/0	13	<org.springframework.boot.loader.net.util.UrlDecoder: byte unescape(java.lang.String,int)>/$stack8	<org.springframework.boot.loader.net.util.UrlDecoder: byte unescape(java.lang.String,int)>
<org.springframework.boot.loader.net.protocol.jar.JarUrlConnection$ConnectionInputStream: void close()>/throw $stack6/0	18	<org.springframework.boot.loader.net.protocol.jar.JarUrlConnection$ConnectionInputStream: void close()>/$stack6	<org.springframework.boot.loader.net.protocol.jar.JarUrlConnection$ConnectionInputStream: void close()>
<org.springframework.boot.loader.net.util.UrlDecoder: void assertNoError(java.nio.charset.CoderResult)>/throw $stack2/0	7	<org.springframework.boot.loader.net.util.UrlDecoder: void assertNoError(java.nio.charset.CoderResult)>/$stack2	<org.springframework.boot.loader.net.util.UrlDecoder: void assertNoError(java.nio.charset.CoderResult)>
<org.springframework.boot.loader.net.protocol.jar.Handler: void parseURL(java.net.URL,java.lang.String,int,int)>/throw $u0/0	15	<org.springframework.boot.loader.net.protocol.jar.Handler: void parseURL(java.net.URL,java.lang.String,int,int)>/$u0	<org.springframework.boot.loader.net.protocol.jar.Handler: void parseURL(java.net.URL,java.lang.String,int,int)>
<org.springframework.boot.loader.net.protocol.jar.Handler: java.lang.String extractAbsolutePath(java.lang.String,int,int)>/throw $u0/0	11	<org.springframework.boot.loader.net.protocol.jar.Handler: java.lang.String extractAbsolutePath(java.lang.String,int,int)>/$u0	<org.springframework.boot.loader.net.protocol.jar.Handler: java.lang.String extractAbsolutePath(java.lang.String,int,int)>
<org.springframework.boot.loader.net.protocol.jar.Handler: java.lang.String extractContextPath(java.net.URL,java.lang.String,int)>/throw $u0/0	21	<org.springframework.boot.loader.net.protocol.jar.Handler: java.lang.String extractContextPath(java.net.URL,java.lang.String,int)>/$u0	<org.springframework.boot.loader.net.protocol.jar.Handler: java.lang.String extractContextPath(java.net.URL,java.lang.String,int)>
<org.springframework.boot.loader.net.protocol.jar.Handler: java.lang.String extractContextPath(java.net.URL,java.lang.String,int)>/throw $u1/0	37	<org.springframework.boot.loader.net.protocol.jar.Handler: java.lang.String extractContextPath(java.net.URL,java.lang.String,int)>/$u1	<org.springframework.boot.loader.net.protocol.jar.Handler: java.lang.String extractContextPath(java.net.URL,java.lang.String,int)>
<org.springframework.boot.loader.zip.ZipLocalFileHeaderRecord: org.springframework.boot.loader.zip.ZipLocalFileHeaderRecord load(org.springframework.boot.loader.zip.DataBlock,long)>/throw $stack21/0	19	<org.springframework.boot.loader.zip.ZipLocalFileHeaderRecord: org.springframework.boot.loader.zip.ZipLocalFileHeaderRecord load(org.springframework.boot.loader.zip.DataBlock,long)>/$stack21	<org.springframework.boot.loader.zip.ZipLocalFileHeaderRecord: org.springframework.boot.loader.zip.ZipLocalFileHeaderRecord load(org.springframework.boot.loader.zip.DataBlock,long)>
<org.springframework.boot.loader.net.protocol.jar.Handler: void assertInnerUrlIsNotMalformed(java.lang.String,java.lang.String)>/throw $stack7/0	21	<org.springframework.boot.loader.net.protocol.jar.Handler: void assertInnerUrlIsNotMalformed(java.lang.String,java.lang.String)>/$stack7	<org.springframework.boot.loader.net.protocol.jar.Handler: void assertInnerUrlIsNotMalformed(java.lang.String,java.lang.String)>
