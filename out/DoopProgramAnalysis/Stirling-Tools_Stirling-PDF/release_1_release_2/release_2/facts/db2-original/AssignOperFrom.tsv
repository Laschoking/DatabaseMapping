<org.springframework.boot.loader.zip.VirtualZipDataBlock$DataPart: int read(java.nio.ByteBuffer,long)>/assign/3	1	<org.springframework.boot.loader.zip.VirtualZipDataBlock$DataPart: int read(java.nio.ByteBuffer,long)>/$stack7
<org.springframework.boot.loader.zip.VirtualZipDataBlock$DataPart: int read(java.nio.ByteBuffer,long)>/assign/3	2	<org.springframework.boot.loader.zip.VirtualZipDataBlock$DataPart: int read(java.nio.ByteBuffer,long)>/pos#_0
<org.springframework.boot.loader.zip.VirtualZipDataBlock$DataPart: int read(java.nio.ByteBuffer,long)>/assign/8	1	<org.springframework.boot.loader.zip.VirtualZipDataBlock$DataPart: int read(java.nio.ByteBuffer,long)>/$stack16
<org.springframework.boot.loader.zip.VirtualZipDataBlock$DataPart: int read(java.nio.ByteBuffer,long)>/assign/8	2	<org.springframework.boot.loader.zip.VirtualZipDataBlock$DataPart: int read(java.nio.ByteBuffer,long)>/remaining#_130
<org.springframework.boot.loader.zip.VirtualZipDataBlock$DataPart: int read(java.nio.ByteBuffer,long)>/assign/10	1	<org.springframework.boot.loader.zip.VirtualZipDataBlock$DataPart: int read(java.nio.ByteBuffer,long)>/$stack11
<org.springframework.boot.loader.zip.VirtualZipDataBlock$DataPart: int read(java.nio.ByteBuffer,long)>/assign/10	2	<org.springframework.boot.loader.zip.VirtualZipDataBlock$DataPart: int read(java.nio.ByteBuffer,long)>/pos#_0
<org.springframework.boot.loader.launch.JarFileArchive: java.net.URL getUnpackedNestedJarUrl(java.util.jar.JarEntry)>/assign/5	1	<org.springframework.boot.loader.launch.JarFileArchive: java.net.URL getUnpackedNestedJarUrl(java.util.jar.JarEntry)>/$stack17
<org.springframework.boot.loader.launch.JarFileArchive: java.net.URL getUnpackedNestedJarUrl(java.util.jar.JarEntry)>/assign/14	1	<org.springframework.boot.loader.launch.JarFileArchive: java.net.URL getUnpackedNestedJarUrl(java.util.jar.JarEntry)>/$stack11
<org.springframework.boot.loader.launch.JarFileArchive: java.net.URL getUnpackedNestedJarUrl(java.util.jar.JarEntry)>/assign/14	2	<org.springframework.boot.loader.launch.JarFileArchive: java.net.URL getUnpackedNestedJarUrl(java.util.jar.JarEntry)>/$stack10
<org.springframework.boot.loader.launch.JarFileArchive: java.nio.file.Path createUnpackDirectory(java.nio.file.Path)>/assign/10	1	<org.springframework.boot.loader.launch.JarFileArchive: java.nio.file.Path createUnpackDirectory(java.nio.file.Path)>/attempts_$$A_1#_137
<org.springframework.boot.loader.zip.ByteArrayDataBlock: long size()>/assign/1	1	<org.springframework.boot.loader.zip.ByteArrayDataBlock: long size()>/$stack1
<org.springframework.boot.loader.zip.ByteArrayDataBlock: int read(java.nio.ByteBuffer,int)>/assign/4	1	<org.springframework.boot.loader.zip.ByteArrayDataBlock: int read(java.nio.ByteBuffer,int)>/$stack5
<org.springframework.boot.loader.zip.ByteArrayDataBlock: int read(java.nio.ByteBuffer,int)>/assign/5	1	<org.springframework.boot.loader.zip.ByteArrayDataBlock: int read(java.nio.ByteBuffer,int)>/$stack6
<org.springframework.boot.loader.zip.ByteArrayDataBlock: int read(java.nio.ByteBuffer,int)>/assign/5	2	<org.springframework.boot.loader.zip.ByteArrayDataBlock: int read(java.nio.ByteBuffer,int)>/pos#_0
<org.springframework.boot.loader.zip.ZipLocalFileHeaderRecord: long size()>/assign/2	2	<org.springframework.boot.loader.zip.ZipLocalFileHeaderRecord: long size()>/$i0
<org.springframework.boot.loader.zip.ZipLocalFileHeaderRecord: long size()>/assign/4	1	<org.springframework.boot.loader.zip.ZipLocalFileHeaderRecord: long size()>/$stack3
<org.springframework.boot.loader.zip.ZipLocalFileHeaderRecord: long size()>/assign/4	2	<org.springframework.boot.loader.zip.ZipLocalFileHeaderRecord: long size()>/$i1
