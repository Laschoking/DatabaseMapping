<org.springframework.boot.loader.zip.VirtualZipDataBlock$DataPart: int read(java.nio.ByteBuffer,long)>/if/0	2	0
<org.springframework.boot.loader.launch.JarFileArchive: java.net.URL getNestedJarUrl(org.springframework.boot.loader.launch.JarFileArchive$JarArchiveEntry)>/if/1	2	0
<org.springframework.boot.loader.launch.JarFileArchive: java.net.URL getUnpackedNestedJarUrl(java.util.jar.JarEntry)>/if/1	2	0
<org.springframework.boot.loader.launch.JarFileArchive: java.net.URL getUnpackedNestedJarUrl(java.util.jar.JarEntry)>/if/2	2	0
<org.springframework.boot.loader.launch.JarFileArchive: java.nio.file.Path createUnpackDirectory(java.nio.file.Path)>/if/0	2	100
<org.springframework.boot.loader.launch.JarFileArchive: java.nio.file.attribute.FileAttribute[] getFileAttributes(java.nio.file.Path,java.nio.file.attribute.FileAttribute[])>/if/0	2	0
<org.springframework.boot.loader.jar.NestedJarFile$RawZipDataInputStream: void close()>/if/0	2	0
<org.springframework.boot.loader.zip.ByteArrayDataBlock: int read(java.nio.ByteBuffer,int)>/if/0	2	0
<org.springframework.boot.loader.zip.ByteArrayDataBlock: int read(java.nio.ByteBuffer,int)>/if/0	2	0
<org.springframework.boot.loader.zip.ByteArrayDataBlock: int read(java.nio.ByteBuffer,int)>/if/0	2	0
<org.springframework.boot.loader.zip.ZipLocalFileHeaderRecord: org.springframework.boot.loader.zip.ZipLocalFileHeaderRecord load(org.springframework.boot.loader.zip.DataBlock,long)>/if/0	2	67324752
