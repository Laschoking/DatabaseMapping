<org.springframework.boot.loader.zip.ZipContent$Kind: org.springframework.boot.loader.zip.ZipContent$Kind[] values()>/read-field-$VALUES/0	0	<org.springframework.boot.loader.zip.ZipContent$Kind: org.springframework.boot.loader.zip.ZipContent$Kind[] values()>/$stack0	<org.springframework.boot.loader.zip.ZipContent$Kind: org.springframework.boot.loader.zip.ZipContent$Kind[] $VALUES>	<org.springframework.boot.loader.zip.ZipContent$Kind: org.springframework.boot.loader.zip.ZipContent$Kind[] values()>
<org.springframework.boot.loader.zip.ZipContent$Kind: org.springframework.boot.loader.zip.ZipContent$Kind[] $values()>/read-field-ZIP/0	1	<org.springframework.boot.loader.zip.ZipContent$Kind: org.springframework.boot.loader.zip.ZipContent$Kind[] $values()>/$stack1	<org.springframework.boot.loader.zip.ZipContent$Kind: org.springframework.boot.loader.zip.ZipContent$Kind ZIP>	<org.springframework.boot.loader.zip.ZipContent$Kind: org.springframework.boot.loader.zip.ZipContent$Kind[] $values()>
<org.springframework.boot.loader.zip.ZipContent$Kind: org.springframework.boot.loader.zip.ZipContent$Kind[] $values()>/read-field-NESTED_ZIP/0	3	<org.springframework.boot.loader.zip.ZipContent$Kind: org.springframework.boot.loader.zip.ZipContent$Kind[] $values()>/$stack2	<org.springframework.boot.loader.zip.ZipContent$Kind: org.springframework.boot.loader.zip.ZipContent$Kind NESTED_ZIP>	<org.springframework.boot.loader.zip.ZipContent$Kind: org.springframework.boot.loader.zip.ZipContent$Kind[] $values()>
<org.springframework.boot.loader.zip.ZipContent$Kind: org.springframework.boot.loader.zip.ZipContent$Kind[] $values()>/read-field-NESTED_DIRECTORY/0	5	<org.springframework.boot.loader.zip.ZipContent$Kind: org.springframework.boot.loader.zip.ZipContent$Kind[] $values()>/$stack3	<org.springframework.boot.loader.zip.ZipContent$Kind: org.springframework.boot.loader.zip.ZipContent$Kind NESTED_DIRECTORY>	<org.springframework.boot.loader.zip.ZipContent$Kind: org.springframework.boot.loader.zip.ZipContent$Kind[] $values()>
<org.springframework.boot.loader.ref.Cleaner: void <clinit>()>/read-field-instance/0	0	<org.springframework.boot.loader.ref.Cleaner: void <clinit>()>/$stack0	<org.springframework.boot.loader.ref.DefaultCleaner: org.springframework.boot.loader.ref.DefaultCleaner instance>	<org.springframework.boot.loader.ref.Cleaner: void <clinit>()>
<org.springframework.boot.loader.launch.JarFileArchive: java.nio.file.Path getTempUnpackDirectory()>/read-field-TEMP/0	4	<org.springframework.boot.loader.launch.JarFileArchive: java.nio.file.Path getTempUnpackDirectory()>/$stack4	<org.springframework.boot.loader.launch.JarFileArchive: java.nio.file.Path TEMP>	<org.springframework.boot.loader.launch.JarFileArchive: java.nio.file.Path getTempUnpackDirectory()>
<org.springframework.boot.loader.launch.JarFileArchive: java.nio.file.Path getTempUnpackDirectory()>/read-field-TEMP/1	8	<org.springframework.boot.loader.launch.JarFileArchive: java.nio.file.Path getTempUnpackDirectory()>/$stack6	<org.springframework.boot.loader.launch.JarFileArchive: java.nio.file.Path TEMP>	<org.springframework.boot.loader.launch.JarFileArchive: java.nio.file.Path getTempUnpackDirectory()>
<org.springframework.boot.loader.launch.JarFileArchive: void createDirectory(java.nio.file.Path)>/read-field-DIRECTORY_PERMISSION_ATTRIBUTES/0	2	<org.springframework.boot.loader.launch.JarFileArchive: void createDirectory(java.nio.file.Path)>/$stack2	<org.springframework.boot.loader.launch.JarFileArchive: java.nio.file.attribute.FileAttribute[] DIRECTORY_PERMISSION_ATTRIBUTES>	<org.springframework.boot.loader.launch.JarFileArchive: void createDirectory(java.nio.file.Path)>
<org.springframework.boot.loader.launch.JarFileArchive: void unpack(java.util.jar.JarEntry,java.nio.file.Path)>/read-field-REPLACE_EXISTING/0	9	<org.springframework.boot.loader.launch.JarFileArchive: void unpack(java.util.jar.JarEntry,java.nio.file.Path)>/$stack9	<java.nio.file.StandardCopyOption: java.nio.file.StandardCopyOption REPLACE_EXISTING>	<org.springframework.boot.loader.launch.JarFileArchive: void unpack(java.util.jar.JarEntry,java.nio.file.Path)>
<org.springframework.boot.loader.launch.JarFileArchive: void createFile(java.nio.file.Path)>/read-field-FILE_PERMISSION_ATTRIBUTES/0	2	<org.springframework.boot.loader.launch.JarFileArchive: void createFile(java.nio.file.Path)>/$stack2	<org.springframework.boot.loader.launch.JarFileArchive: java.nio.file.attribute.FileAttribute[] FILE_PERMISSION_ATTRIBUTES>	<org.springframework.boot.loader.launch.JarFileArchive: void createFile(java.nio.file.Path)>
<org.springframework.boot.loader.launch.JarFileArchive: java.nio.file.attribute.FileAttribute[] getFileAttributes(java.nio.file.Path,java.nio.file.attribute.FileAttribute[])>/read-field-NO_FILE_ATTRIBUTES/0	6	<org.springframework.boot.loader.launch.JarFileArchive: java.nio.file.attribute.FileAttribute[] getFileAttributes(java.nio.file.Path,java.nio.file.attribute.FileAttribute[])>/$stack5	<org.springframework.boot.loader.launch.JarFileArchive: java.nio.file.attribute.FileAttribute[] NO_FILE_ATTRIBUTES>	<org.springframework.boot.loader.launch.JarFileArchive: java.nio.file.attribute.FileAttribute[] getFileAttributes(java.nio.file.Path,java.nio.file.attribute.FileAttribute[])>
<org.springframework.boot.loader.launch.JarFileArchive: void <clinit>()>/read-field-OWNER_READ/0	3	<org.springframework.boot.loader.launch.JarFileArchive: void <clinit>()>/$stack2	<java.nio.file.attribute.PosixFilePermission: java.nio.file.attribute.PosixFilePermission OWNER_READ>	<org.springframework.boot.loader.launch.JarFileArchive: void <clinit>()>
<org.springframework.boot.loader.launch.JarFileArchive: void <clinit>()>/read-field-OWNER_WRITE/0	5	<org.springframework.boot.loader.launch.JarFileArchive: void <clinit>()>/$stack3	<java.nio.file.attribute.PosixFilePermission: java.nio.file.attribute.PosixFilePermission OWNER_WRITE>	<org.springframework.boot.loader.launch.JarFileArchive: void <clinit>()>
<org.springframework.boot.loader.launch.JarFileArchive: void <clinit>()>/read-field-OWNER_EXECUTE/0	7	<org.springframework.boot.loader.launch.JarFileArchive: void <clinit>()>/$stack4	<java.nio.file.attribute.PosixFilePermission: java.nio.file.attribute.PosixFilePermission OWNER_EXECUTE>	<org.springframework.boot.loader.launch.JarFileArchive: void <clinit>()>
<org.springframework.boot.loader.launch.JarFileArchive: void <clinit>()>/read-field-OWNER_READ/1	12	<org.springframework.boot.loader.launch.JarFileArchive: void <clinit>()>/$stack7	<java.nio.file.attribute.PosixFilePermission: java.nio.file.attribute.PosixFilePermission OWNER_READ>	<org.springframework.boot.loader.launch.JarFileArchive: void <clinit>()>
<org.springframework.boot.loader.launch.JarFileArchive: void <clinit>()>/read-field-OWNER_WRITE/1	14	<org.springframework.boot.loader.launch.JarFileArchive: void <clinit>()>/$stack8	<java.nio.file.attribute.PosixFilePermission: java.nio.file.attribute.PosixFilePermission OWNER_WRITE>	<org.springframework.boot.loader.launch.JarFileArchive: void <clinit>()>
<org.springframework.boot.loader.zip.ZipLocalFileHeaderRecord: byte[] asByteArray()>/read-field-LITTLE_ENDIAN/0	3	<org.springframework.boot.loader.zip.ZipLocalFileHeaderRecord: byte[] asByteArray()>/$stack2	<java.nio.ByteOrder: java.nio.ByteOrder LITTLE_ENDIAN>	<org.springframework.boot.loader.zip.ZipLocalFileHeaderRecord: byte[] asByteArray()>
<org.springframework.boot.loader.zip.ZipLocalFileHeaderRecord: org.springframework.boot.loader.zip.ZipLocalFileHeaderRecord load(org.springframework.boot.loader.zip.DataBlock,long)>/read-field-debug/0	2	<org.springframework.boot.loader.zip.ZipLocalFileHeaderRecord: org.springframework.boot.loader.zip.ZipLocalFileHeaderRecord load(org.springframework.boot.loader.zip.DataBlock,long)>/$stack4	<org.springframework.boot.loader.zip.ZipLocalFileHeaderRecord: org.springframework.boot.loader.log.DebugLogger debug>	<org.springframework.boot.loader.zip.ZipLocalFileHeaderRecord: org.springframework.boot.loader.zip.ZipLocalFileHeaderRecord load(org.springframework.boot.loader.zip.DataBlock,long)>
<org.springframework.boot.loader.zip.ZipLocalFileHeaderRecord: org.springframework.boot.loader.zip.ZipLocalFileHeaderRecord load(org.springframework.boot.loader.zip.DataBlock,long)>/read-field-LITTLE_ENDIAN/0	8	<org.springframework.boot.loader.zip.ZipLocalFileHeaderRecord: org.springframework.boot.loader.zip.ZipLocalFileHeaderRecord load(org.springframework.boot.loader.zip.DataBlock,long)>/$stack6	<java.nio.ByteOrder: java.nio.ByteOrder LITTLE_ENDIAN>	<org.springframework.boot.loader.zip.ZipLocalFileHeaderRecord: org.springframework.boot.loader.zip.ZipLocalFileHeaderRecord load(org.springframework.boot.loader.zip.DataBlock,long)>
